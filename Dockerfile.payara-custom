FROM registry.access.redhat.com/ubi9/openjdk-17:1.14-2.1681917140

ARG PAYARA_VERSION=5.2022.5
ARG PAYARA_PKG=https://search.maven.org/remotecontent?filepath=fish/payara/distributions/payara/${PAYARA_VERSION}/payara-${PAYARA_VERSION}.zip
ARG PAYARA_SHA1=1e1071792368d3e1e909d6b20ca2c61862778769
ARG TINI_VERSION=v0.19.0

# Initialize the configurable environment variables
ENV HOME_DIR=/opt/payara \
    PAYARA_DIR=/opt/payara/appserver \
    SCRIPT_DIR=/opt/payara/scripts \
    CONFIG_DIR=/opt/payara/config \
    DEPLOY_DIR=/opt/payara/deployments \
    PASSWORD_FILE=/opt/payara/passwordFile \
    # Payara Server Domain options
    DOMAIN_NAME=production \
    ADMIN_USER=admin \
    ADMIN_PASSWORD=admin \
    # Utility environment variables
    JVM_ARGS= \
    MEM_MAX_RAM_PERCENTAGE=70.0 \
    MEM_XSS=512k

ENV PATH="${PATH}:${PAYARA_DIR}/bin"

USER root

RUN microdnf --setopt=install_weak_deps=0 --setopt=tsflags=nodocs install -y wget unzip \
    && microdnf clean all \
    && rpm -q wget unzip \
    && mkdir -p ${DEPLOY_DIR} \
    && mkdir -p ${CONFIG_DIR} \
    && mkdir -p ${SCRIPT_DIR} \
    && wget --no-verbose -O /tini https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini \
    && chmod +x /tini

WORKDIR ${HOME_DIR}

ENV DOMAIN_NAME=domain1 \
    PAYARA_ARGS= \
    PREBOOT_COMMANDS=/opt/payara/config/pre-boot-commands.asadmin \
    PREBOOT_COMMANDS_FINAL=/opt/payara/config/pre-boot-commands-final.asadmin \
    POSTBOOT_COMMANDS=/opt/payara/config/post-boot-commands.asadmin \
    POSTBOOT_COMMANDS_FINAL=/opt/payara/config/post-boot-commands-final.asadmin \
    DEPLOY_PROPS=

# Download and unzip the Payara distribution
RUN wget --no-verbose -O payara.zip ${PAYARA_PKG} && \
    echo "${PAYARA_SHA1} *payara.zip" | sha1sum -c - && \
    unzip -qq payara.zip -d ./ && \
    mv payara*/ appserver

USER root

# Configure the password file for configuring Payara
RUN echo "AS_ADMIN_PASSWORD=" > /tmp/tmpfile && \
    echo "AS_ADMIN_NEWPASSWORD=${ADMIN_PASSWORD}" >> /tmp/tmpfile && \
    echo "AS_ADMIN_PASSWORD=${ADMIN_PASSWORD}" >> ${PASSWORD_FILE} && \
    # Configure the payara domain
    ${PAYARA_DIR}/bin/asadmin --user ${ADMIN_USER} --passwordfile=/tmp/tmpfile change-admin-password --domain_name=${DOMAIN_NAME} && \
    ${PAYARA_DIR}/bin/asadmin --user=${ADMIN_USER} --passwordfile=${PASSWORD_FILE} start-domain ${DOMAIN_NAME} && \
    ${PAYARA_DIR}/bin/asadmin --user=${ADMIN_USER} --passwordfile=${PASSWORD_FILE} enable-secure-admin && \
    ${PAYARA_DIR}/bin/asadmin --user=${ADMIN_USER} --passwordfile=${PASSWORD_FILE} create-jvm-options '-XX\:+UseContainerSupport' && \
    ${PAYARA_DIR}/bin/asadmin --user=${ADMIN_USER} --passwordfile=${PASSWORD_FILE} set-log-attributes com.sun.enterprise.server.logging.GFFileHandler.logtoFile=false && \
    ${PAYARA_DIR}/bin/asadmin --user=${ADMIN_USER} --passwordfile=${PASSWORD_FILE} stop-domain ${DOMAIN_NAME} && \
    # Cleanup unused files
    rm -rf \
        /tmp/tmpFile \
        payara.zip \
        ${PAYARA_DIR}/glassfish/domains/${DOMAIN_NAME}/osgi-cache \
        ${PAYARA_DIR}/glassfish/domains/${DOMAIN_NAME}/logs
        #${PAYARA_DIR}/glassfish/domains/domain1

# Copy across docker scripts
COPY containers/payara/scripts/*.sh ${SCRIPT_DIR}/

USER root

RUN mkdir -p ${SCRIPT_DIR}/init.d && \
    chmod +x ${SCRIPT_DIR}/* && \
    chown -R 185 ${HOME_DIR} && \
    chmod -R 770 ${HOME_DIR}

# Default payara ports to expose
# 4848: admin console
# 9009: debug port (JPDA)
# 8080: http
# 8181: https
EXPOSE 4848 9009 8080 8181

USER 185

ENTRYPOINT ["/tini", "--"]
CMD ${SCRIPT_DIR}/entrypoint.sh
